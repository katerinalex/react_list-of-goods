{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","sortAlph","setState","ALPHABET","sortLength","LENGTH","reverse","reset","this","goods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","className","type","onClick","NONE","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,GAHd,EAMEC,SAAW,WACT,EAAKC,SAAS,CAAEF,SAAUL,EAASQ,YAPvC,EAUEC,WAAa,WACX,EAAKF,SAAS,CAAEF,SAAUL,EAASU,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAJ,GACZ,MAAO,CAAEC,YAAaD,EAAMC,gBAhBlC,EAoBEQ,MAAQ,WACN,EAAKL,SAAS,CACZH,YAAY,EACZC,SAAU,KAvBhB,4CA2BE,WACE,MAAiCQ,KAAKV,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdS,EA1DH,SACLA,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQb,GACN,KAAKL,EAASQ,SACZ,OAAOS,EAAEE,cAAcD,GACzB,KAAKlB,EAASU,OACZ,OAAOO,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAIThB,GACFW,EAAaJ,UAGRI,EAqCSM,CAAkBpB,EAAiBY,KAAKV,OAEtD,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEjB,IAAaL,EAASQ,SAClB,iBACA,0BAENgB,QAASX,KAAKP,SAPhB,iCAYA,wBACEiB,KAAK,SACLD,UAAWjB,IAAaL,EAASU,OAC7B,oBACA,6BACJc,QAASX,KAAKJ,WALhB,4BAUA,wBACEc,KAAK,SACLD,UAAWlB,EACP,oBACA,6BACJoB,QAASX,KAAKF,QALhB,sBAUGP,GAA2B,IAAbC,IACf,wBACEkB,KAAK,SACLD,UACEjB,IAAaL,EAASyB,MAASrB,EAE3B,0BADA,iBAGNoB,QAASX,KAAKD,MAPhB,sBAcJ,6BACE,6BACGE,EAAMY,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,iBApFvB,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ce4f751.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortAlph = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => {\n      return { isReversed: !state.isReversed };\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: 0,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortType === SortType.ALPHABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.sortAlph}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          { (isReversed || sortType !== 0) && (\n            <button\n              type=\"button\"\n              className={\n                sortType === SortType.NONE && !isReversed\n                  ? 'button is-info'\n                  : 'button is-info is-light'\n              }\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(item => (\n              <li key={item}>\n                {item}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}