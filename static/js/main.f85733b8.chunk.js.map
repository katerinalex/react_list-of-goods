{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","console","log","sort","a","b","localeCompare","length","reverse","App","state","sortAlph","setState","sortLength","reset","this","className","type","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAoBzB,OAjBAI,QAAQC,IAAIJ,EAAUC,GAEtBC,EAAaG,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAK,EACH,OAAOM,EAAEE,cAAcD,GACzB,KAAK,EACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SApCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAU,GAHd,EAMEa,SAAW,WACT,EAAKC,SAAS,CAAEd,SAAU,KAP9B,EAUEe,WAAa,WACX,EAAKD,SAAS,CAAEd,SAAU,KAX9B,EAcEU,QAAU,WACR,EAAKI,UAAS,SAAAF,GACZ,MAAO,CAAEX,YAAaW,EAAMX,gBAhBlC,EAoBEe,MAAQ,WACN,EAAKF,SAAS,CACZb,YAAY,EACZD,SAAU,KAvBhB,4CA2BE,WACE,MAAiCiB,KAAKL,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACe,IAAblB,EACI,iBACA,0BAENoB,QAASH,KAAKJ,SAPhB,iCAYA,wBACEM,KAAK,SACLD,UAAwB,IAAblB,EACP,oBACA,6BACJoB,QAASH,KAAKF,WALhB,4BAUA,wBACEI,KAAK,SACLD,UAAWjB,EACP,oBACA,6BACJmB,QAASH,KAAKP,QALhB,sBAUGT,GAA2B,IAAbD,IACf,wBACEmB,KAAK,SACLD,UACe,IAAblB,GAAmBC,EAEf,0BADA,iBAGNmB,QAASH,KAAKD,MAPhB,sBAcJ,6BACE,6BACGlB,EAAkBD,EAAiBoB,KAAKL,OAAOS,KAAI,SAAAC,GAAI,OACtD,6BACGA,GADMA,iBAnFvB,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f85733b8.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 1:\n        return a.localeCompare(b);\n      case 2:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortAlph = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  reverse = () => {\n    this.setState(state => {\n      return { isReversed: !state.isReversed };\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: 0,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortType === 1\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.sortAlph}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === 2\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          { (isReversed || sortType !== 0) && (\n            <button\n              type=\"button\"\n              className={\n                sortType === 0 && !isReversed\n                  ? 'button is-info'\n                  : 'button is-info is-light'\n              }\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(item => (\n              <li key={item}>\n                {item}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}